/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['sql-generator/index.js']) {
  _$jscoverage['sql-generator/index.js'] = [];
  _$jscoverage['sql-generator/index.js'][2] = 0;
  _$jscoverage['sql-generator/index.js'][3] = 0;
  _$jscoverage['sql-generator/index.js'][4] = 0;
  _$jscoverage['sql-generator/index.js'][5] = 0;
  _$jscoverage['sql-generator/index.js'][6] = 0;
  _$jscoverage['sql-generator/index.js'][10] = 0;
  _$jscoverage['sql-generator/index.js'][12] = 0;
  _$jscoverage['sql-generator/index.js'][13] = 0;
  _$jscoverage['sql-generator/index.js'][14] = 0;
  _$jscoverage['sql-generator/index.js'][15] = 0;
  _$jscoverage['sql-generator/index.js'][16] = 0;
  _$jscoverage['sql-generator/index.js'][18] = 0;
  _$jscoverage['sql-generator/index.js'][19] = 0;
  _$jscoverage['sql-generator/index.js'][20] = 0;
  _$jscoverage['sql-generator/index.js'][21] = 0;
  _$jscoverage['sql-generator/index.js'][22] = 0;
  _$jscoverage['sql-generator/index.js'][23] = 0;
  _$jscoverage['sql-generator/index.js'][24] = 0;
  _$jscoverage['sql-generator/index.js'][25] = 0;
  _$jscoverage['sql-generator/index.js'][27] = 0;
  _$jscoverage['sql-generator/index.js'][28] = 0;
  _$jscoverage['sql-generator/index.js'][29] = 0;
  _$jscoverage['sql-generator/index.js'][30] = 0;
  _$jscoverage['sql-generator/index.js'][32] = 0;
  _$jscoverage['sql-generator/index.js'][33] = 0;
  _$jscoverage['sql-generator/index.js'][34] = 0;
  _$jscoverage['sql-generator/index.js'][36] = 0;
  _$jscoverage['sql-generator/index.js'][38] = 0;
  _$jscoverage['sql-generator/index.js'][39] = 0;
  _$jscoverage['sql-generator/index.js'][40] = 0;
  _$jscoverage['sql-generator/index.js'][41] = 0;
  _$jscoverage['sql-generator/index.js'][43] = 0;
  _$jscoverage['sql-generator/index.js'][44] = 0;
  _$jscoverage['sql-generator/index.js'][46] = 0;
  _$jscoverage['sql-generator/index.js'][47] = 0;
  _$jscoverage['sql-generator/index.js'][48] = 0;
  _$jscoverage['sql-generator/index.js'][49] = 0;
  _$jscoverage['sql-generator/index.js'][50] = 0;
  _$jscoverage['sql-generator/index.js'][52] = 0;
  _$jscoverage['sql-generator/index.js'][53] = 0;
  _$jscoverage['sql-generator/index.js'][54] = 0;
  _$jscoverage['sql-generator/index.js'][55] = 0;
  _$jscoverage['sql-generator/index.js'][56] = 0;
  _$jscoverage['sql-generator/index.js'][57] = 0;
  _$jscoverage['sql-generator/index.js'][58] = 0;
  _$jscoverage['sql-generator/index.js'][59] = 0;
  _$jscoverage['sql-generator/index.js'][61] = 0;
  _$jscoverage['sql-generator/index.js'][63] = 0;
  _$jscoverage['sql-generator/index.js'][64] = 0;
  _$jscoverage['sql-generator/index.js'][65] = 0;
  _$jscoverage['sql-generator/index.js'][66] = 0;
  _$jscoverage['sql-generator/index.js'][67] = 0;
  _$jscoverage['sql-generator/index.js'][70] = 0;
  _$jscoverage['sql-generator/index.js'][72] = 0;
  _$jscoverage['sql-generator/index.js'][74] = 0;
  _$jscoverage['sql-generator/index.js'][75] = 0;
  _$jscoverage['sql-generator/index.js'][76] = 0;
  _$jscoverage['sql-generator/index.js'][77] = 0;
  _$jscoverage['sql-generator/index.js'][78] = 0;
  _$jscoverage['sql-generator/index.js'][81] = 0;
  _$jscoverage['sql-generator/index.js'][82] = 0;
  _$jscoverage['sql-generator/index.js'][83] = 0;
  _$jscoverage['sql-generator/index.js'][84] = 0;
  _$jscoverage['sql-generator/index.js'][85] = 0;
  _$jscoverage['sql-generator/index.js'][87] = 0;
  _$jscoverage['sql-generator/index.js'][88] = 0;
  _$jscoverage['sql-generator/index.js'][89] = 0;
  _$jscoverage['sql-generator/index.js'][90] = 0;
  _$jscoverage['sql-generator/index.js'][91] = 0;
  _$jscoverage['sql-generator/index.js'][93] = 0;
  _$jscoverage['sql-generator/index.js'][95] = 0;
  _$jscoverage['sql-generator/index.js'][96] = 0;
  _$jscoverage['sql-generator/index.js'][97] = 0;
  _$jscoverage['sql-generator/index.js'][98] = 0;
  _$jscoverage['sql-generator/index.js'][99] = 0;
  _$jscoverage['sql-generator/index.js'][101] = 0;
  _$jscoverage['sql-generator/index.js'][102] = 0;
  _$jscoverage['sql-generator/index.js'][103] = 0;
  _$jscoverage['sql-generator/index.js'][105] = 0;
  _$jscoverage['sql-generator/index.js'][107] = 0;
  _$jscoverage['sql-generator/index.js'][108] = 0;
  _$jscoverage['sql-generator/index.js'][109] = 0;
  _$jscoverage['sql-generator/index.js'][111] = 0;
  _$jscoverage['sql-generator/index.js'][112] = 0;
  _$jscoverage['sql-generator/index.js'][113] = 0;
  _$jscoverage['sql-generator/index.js'][114] = 0;
  _$jscoverage['sql-generator/index.js'][116] = 0;
  _$jscoverage['sql-generator/index.js'][118] = 0;
  _$jscoverage['sql-generator/index.js'][119] = 0;
  _$jscoverage['sql-generator/index.js'][121] = 0;
  _$jscoverage['sql-generator/index.js'][122] = 0;
  _$jscoverage['sql-generator/index.js'][125] = 0;
  _$jscoverage['sql-generator/index.js'][126] = 0;
  _$jscoverage['sql-generator/index.js'][127] = 0;
  _$jscoverage['sql-generator/index.js'][128] = 0;
  _$jscoverage['sql-generator/index.js'][129] = 0;
  _$jscoverage['sql-generator/index.js'][130] = 0;
  _$jscoverage['sql-generator/index.js'][132] = 0;
  _$jscoverage['sql-generator/index.js'][133] = 0;
  _$jscoverage['sql-generator/index.js'][134] = 0;
  _$jscoverage['sql-generator/index.js'][136] = 0;
  _$jscoverage['sql-generator/index.js'][137] = 0;
  _$jscoverage['sql-generator/index.js'][139] = 0;
  _$jscoverage['sql-generator/index.js'][140] = 0;
  _$jscoverage['sql-generator/index.js'][141] = 0;
  _$jscoverage['sql-generator/index.js'][142] = 0;
  _$jscoverage['sql-generator/index.js'][144] = 0;
  _$jscoverage['sql-generator/index.js'][147] = 0;
  _$jscoverage['sql-generator/index.js'][148] = 0;
  _$jscoverage['sql-generator/index.js'][149] = 0;
  _$jscoverage['sql-generator/index.js'][151] = 0;
  _$jscoverage['sql-generator/index.js'][152] = 0;
  _$jscoverage['sql-generator/index.js'][153] = 0;
  _$jscoverage['sql-generator/index.js'][154] = 0;
  _$jscoverage['sql-generator/index.js'][155] = 0;
  _$jscoverage['sql-generator/index.js'][156] = 0;
  _$jscoverage['sql-generator/index.js'][157] = 0;
  _$jscoverage['sql-generator/index.js'][158] = 0;
  _$jscoverage['sql-generator/index.js'][159] = 0;
  _$jscoverage['sql-generator/index.js'][160] = 0;
  _$jscoverage['sql-generator/index.js'][161] = 0;
  _$jscoverage['sql-generator/index.js'][163] = 0;
  _$jscoverage['sql-generator/index.js'][164] = 0;
  _$jscoverage['sql-generator/index.js'][165] = 0;
  _$jscoverage['sql-generator/index.js'][166] = 0;
  _$jscoverage['sql-generator/index.js'][168] = 0;
  _$jscoverage['sql-generator/index.js'][169] = 0;
  _$jscoverage['sql-generator/index.js'][170] = 0;
  _$jscoverage['sql-generator/index.js'][171] = 0;
  _$jscoverage['sql-generator/index.js'][174] = 0;
  _$jscoverage['sql-generator/index.js'][176] = 0;
  _$jscoverage['sql-generator/index.js'][177] = 0;
  _$jscoverage['sql-generator/index.js'][178] = 0;
  _$jscoverage['sql-generator/index.js'][179] = 0;
  _$jscoverage['sql-generator/index.js'][180] = 0;
  _$jscoverage['sql-generator/index.js'][181] = 0;
  _$jscoverage['sql-generator/index.js'][183] = 0;
  _$jscoverage['sql-generator/index.js'][184] = 0;
  _$jscoverage['sql-generator/index.js'][185] = 0;
  _$jscoverage['sql-generator/index.js'][187] = 0;
  _$jscoverage['sql-generator/index.js'][188] = 0;
  _$jscoverage['sql-generator/index.js'][189] = 0;
  _$jscoverage['sql-generator/index.js'][190] = 0;
  _$jscoverage['sql-generator/index.js'][191] = 0;
  _$jscoverage['sql-generator/index.js'][192] = 0;
  _$jscoverage['sql-generator/index.js'][193] = 0;
  _$jscoverage['sql-generator/index.js'][195] = 0;
  _$jscoverage['sql-generator/index.js'][198] = 0;
  _$jscoverage['sql-generator/index.js'][199] = 0;
  _$jscoverage['sql-generator/index.js'][202] = 0;
  _$jscoverage['sql-generator/index.js'][203] = 0;
  _$jscoverage['sql-generator/index.js'][204] = 0;
  _$jscoverage['sql-generator/index.js'][206] = 0;
  _$jscoverage['sql-generator/index.js'][209] = 0;
  _$jscoverage['sql-generator/index.js'][212] = 0;
  _$jscoverage['sql-generator/index.js'][215] = 0;
  _$jscoverage['sql-generator/index.js'][216] = 0;
  _$jscoverage['sql-generator/index.js'][219] = 0;
  _$jscoverage['sql-generator/index.js'][220] = 0;
  _$jscoverage['sql-generator/index.js'][221] = 0;
  _$jscoverage['sql-generator/index.js'][222] = 0;
  _$jscoverage['sql-generator/index.js'][223] = 0;
  _$jscoverage['sql-generator/index.js'][224] = 0;
  _$jscoverage['sql-generator/index.js'][225] = 0;
  _$jscoverage['sql-generator/index.js'][226] = 0;
  _$jscoverage['sql-generator/index.js'][229] = 0;
  _$jscoverage['sql-generator/index.js'][231] = 0;
  _$jscoverage['sql-generator/index.js'][233] = 0;
  _$jscoverage['sql-generator/index.js'][234] = 0;
  _$jscoverage['sql-generator/index.js'][235] = 0;
  _$jscoverage['sql-generator/index.js'][236] = 0;
  _$jscoverage['sql-generator/index.js'][237] = 0;
  _$jscoverage['sql-generator/index.js'][240] = 0;
  _$jscoverage['sql-generator/index.js'][242] = 0;
  _$jscoverage['sql-generator/index.js'][243] = 0;
  _$jscoverage['sql-generator/index.js'][244] = 0;
  _$jscoverage['sql-generator/index.js'][246] = 0;
  _$jscoverage['sql-generator/index.js'][247] = 0;
  _$jscoverage['sql-generator/index.js'][248] = 0;
  _$jscoverage['sql-generator/index.js'][249] = 0;
  _$jscoverage['sql-generator/index.js'][250] = 0;
  _$jscoverage['sql-generator/index.js'][251] = 0;
  _$jscoverage['sql-generator/index.js'][252] = 0;
  _$jscoverage['sql-generator/index.js'][254] = 0;
  _$jscoverage['sql-generator/index.js'][256] = 0;
  _$jscoverage['sql-generator/index.js'][258] = 0;
  _$jscoverage['sql-generator/index.js'][260] = 0;
  _$jscoverage['sql-generator/index.js'][262] = 0;
  _$jscoverage['sql-generator/index.js'][263] = 0;
  _$jscoverage['sql-generator/index.js'][264] = 0;
  _$jscoverage['sql-generator/index.js'][265] = 0;
  _$jscoverage['sql-generator/index.js'][266] = 0;
  _$jscoverage['sql-generator/index.js'][267] = 0;
  _$jscoverage['sql-generator/index.js'][268] = 0;
  _$jscoverage['sql-generator/index.js'][269] = 0;
  _$jscoverage['sql-generator/index.js'][270] = 0;
  _$jscoverage['sql-generator/index.js'][271] = 0;
  _$jscoverage['sql-generator/index.js'][272] = 0;
  _$jscoverage['sql-generator/index.js'][275] = 0;
  _$jscoverage['sql-generator/index.js'][276] = 0;
  _$jscoverage['sql-generator/index.js'][277] = 0;
  _$jscoverage['sql-generator/index.js'][280] = 0;
  _$jscoverage['sql-generator/index.js'][281] = 0;
  _$jscoverage['sql-generator/index.js'][282] = 0;
  _$jscoverage['sql-generator/index.js'][283] = 0;
  _$jscoverage['sql-generator/index.js'][285] = 0;
  _$jscoverage['sql-generator/index.js'][289] = 0;
  _$jscoverage['sql-generator/index.js'][290] = 0;
  _$jscoverage['sql-generator/index.js'][293] = 0;
  _$jscoverage['sql-generator/index.js'][294] = 0;
  _$jscoverage['sql-generator/index.js'][295] = 0;
  _$jscoverage['sql-generator/index.js'][296] = 0;
  _$jscoverage['sql-generator/index.js'][298] = 0;
  _$jscoverage['sql-generator/index.js'][300] = 0;
  _$jscoverage['sql-generator/index.js'][301] = 0;
  _$jscoverage['sql-generator/index.js'][302] = 0;
  _$jscoverage['sql-generator/index.js'][303] = 0;
  _$jscoverage['sql-generator/index.js'][304] = 0;
  _$jscoverage['sql-generator/index.js'][305] = 0;
  _$jscoverage['sql-generator/index.js'][306] = 0;
  _$jscoverage['sql-generator/index.js'][307] = 0;
  _$jscoverage['sql-generator/index.js'][308] = 0;
  _$jscoverage['sql-generator/index.js'][311] = 0;
  _$jscoverage['sql-generator/index.js'][312] = 0;
  _$jscoverage['sql-generator/index.js'][313] = 0;
  _$jscoverage['sql-generator/index.js'][316] = 0;
  _$jscoverage['sql-generator/index.js'][317] = 0;
  _$jscoverage['sql-generator/index.js'][318] = 0;
  _$jscoverage['sql-generator/index.js'][319] = 0;
  _$jscoverage['sql-generator/index.js'][321] = 0;
  _$jscoverage['sql-generator/index.js'][325] = 0;
  _$jscoverage['sql-generator/index.js'][326] = 0;
  _$jscoverage['sql-generator/index.js'][329] = 0;
  _$jscoverage['sql-generator/index.js'][330] = 0;
  _$jscoverage['sql-generator/index.js'][331] = 0;
  _$jscoverage['sql-generator/index.js'][332] = 0;
  _$jscoverage['sql-generator/index.js'][333] = 0;
  _$jscoverage['sql-generator/index.js'][334] = 0;
  _$jscoverage['sql-generator/index.js'][335] = 0;
  _$jscoverage['sql-generator/index.js'][337] = 0;
  _$jscoverage['sql-generator/index.js'][339] = 0;
  _$jscoverage['sql-generator/index.js'][340] = 0;
  _$jscoverage['sql-generator/index.js'][341] = 0;
  _$jscoverage['sql-generator/index.js'][342] = 0;
  _$jscoverage['sql-generator/index.js'][343] = 0;
  _$jscoverage['sql-generator/index.js'][344] = 0;
  _$jscoverage['sql-generator/index.js'][345] = 0;
  _$jscoverage['sql-generator/index.js'][346] = 0;
  _$jscoverage['sql-generator/index.js'][349] = 0;
}
_$jscoverage['sql-generator/index.js'][2]++;
var SqlGenerator = (function (type) {
  _$jscoverage['sql-generator/index.js'][3]++;
  var self = this;
  _$jscoverage['sql-generator/index.js'][4]++;
  if (! type) {
    _$jscoverage['sql-generator/index.js'][5]++;
    type = "Pg";
  }
  _$jscoverage['sql-generator/index.js'][6]++;
  self.driver_type = type;
  _$jscoverage['sql-generator/index.js'][10]++;
  self.select = (function (tbls, columns, wheres, opt, callback) {
  _$jscoverage['sql-generator/index.js'][12]++;
  var table = self._gen_table(tbls);
  _$jscoverage['sql-generator/index.js'][13]++;
  var column = self._gen_select_column(columns);
  _$jscoverage['sql-generator/index.js'][14]++;
  var values = new Array();
  _$jscoverage['sql-generator/index.js'][15]++;
  var where = self._gen_where(wheres, values);
  _$jscoverage['sql-generator/index.js'][16]++;
  var option = self._gen_select_option(opt);
  _$jscoverage['sql-generator/index.js'][18]++;
  var sql = "SELECT " + column + " FROM " + table;
  _$jscoverage['sql-generator/index.js'][19]++;
  if (where && where.length > 0) {
    _$jscoverage['sql-generator/index.js'][20]++;
    sql += " WHERE " + where;
  }
  _$jscoverage['sql-generator/index.js'][21]++;
  if (option && option.length > 0) {
    _$jscoverage['sql-generator/index.js'][22]++;
    sql += " " + option;
  }
  _$jscoverage['sql-generator/index.js'][23]++;
  if (typeof callback == "function") {
    _$jscoverage['sql-generator/index.js'][24]++;
    return callback(sql, values);
  }
  _$jscoverage['sql-generator/index.js'][25]++;
  return ({sql: sql, values: values});
});
  _$jscoverage['sql-generator/index.js'][27]++;
  self._gen_select_option = (function (opt) {
  _$jscoverage['sql-generator/index.js'][28]++;
  if (! (typeof opt == "object" && ! (opt instanceof Array))) {
    _$jscoverage['sql-generator/index.js'][29]++;
    return "";
  }
  _$jscoverage['sql-generator/index.js'][30]++;
  var sqls = new Array();
  _$jscoverage['sql-generator/index.js'][32]++;
  if (opt.group_by) {
    _$jscoverage['sql-generator/index.js'][33]++;
    if (typeof opt.group_by == "object" && opt.group_by instanceof Array) {
      _$jscoverage['sql-generator/index.js'][34]++;
      sqls.push("GROUP BY " + opt.group_by.join(", "));
    }
    else {
      _$jscoverage['sql-generator/index.js'][36]++;
      sqls.push("GROUP BY " + opt.group_by);
    }
  }
  _$jscoverage['sql-generator/index.js'][38]++;
  if (opt.order) {
    _$jscoverage['sql-generator/index.js'][39]++;
    var order = "";
    _$jscoverage['sql-generator/index.js'][40]++;
    if (opt.order instanceof Array) {
      _$jscoverage['sql-generator/index.js'][41]++;
      order = opt.order.join(", ");
    }
    else {
      _$jscoverage['sql-generator/index.js'][43]++;
      order = opt.order;
    }
    _$jscoverage['sql-generator/index.js'][44]++;
    sqls.push("ORDER BY " + order);
  }
  _$jscoverage['sql-generator/index.js'][46]++;
  if (opt.limit && typeof opt.limit == "number") {
    _$jscoverage['sql-generator/index.js'][47]++;
    sqls.push("LIMIT " + opt.limit);
  }
  _$jscoverage['sql-generator/index.js'][48]++;
  if (opt.offset && typeof opt.offset == "number") {
    _$jscoverage['sql-generator/index.js'][49]++;
    sqls.push("OFFSET " + opt.offset);
  }
  _$jscoverage['sql-generator/index.js'][50]++;
  return sqls.join(" ");
});
  _$jscoverage['sql-generator/index.js'][52]++;
  self._gen_where = (function (tmp_where, values) {
  _$jscoverage['sql-generator/index.js'][53]++;
  var w;
  _$jscoverage['sql-generator/index.js'][54]++;
  if (tmp_where) {
    _$jscoverage['sql-generator/index.js'][55]++;
    var where = JSON.parse(JSON.stringify(tmp_where));
    _$jscoverage['sql-generator/index.js'][56]++;
    if (where instanceof Array) {
      _$jscoverage['sql-generator/index.js'][57]++;
      var ws = new Array();
      _$jscoverage['sql-generator/index.js'][58]++;
      for (var i = 0; i < where.length; i++) {
        _$jscoverage['sql-generator/index.js'][59]++;
        ws.push(self._recurse_where(values, where[i]));
}
      _$jscoverage['sql-generator/index.js'][61]++;
      w = ws.join(" OR ");
    }
    else {
      _$jscoverage['sql-generator/index.js'][63]++;
      if (typeof where == "object") {
        _$jscoverage['sql-generator/index.js'][64]++;
        var ws = new Array();
        _$jscoverage['sql-generator/index.js'][65]++;
        for (var key in where) {
          _$jscoverage['sql-generator/index.js'][66]++;
          ws.push(self._recurse_where(values, where[key], key));
}
        _$jscoverage['sql-generator/index.js'][67]++;
        w = ws.join(" AND ");
      }
      else {
        _$jscoverage['sql-generator/index.js'][70]++;
        w = where;
      }
    }
  }
  _$jscoverage['sql-generator/index.js'][72]++;
  return w;
});
  _$jscoverage['sql-generator/index.js'][74]++;
  self._recurse_where = (function (values, where, key, bop, jk) {
  _$jscoverage['sql-generator/index.js'][75]++;
  if (! bop) {
    _$jscoverage['sql-generator/index.js'][76]++;
    bop = "=";
  }
  _$jscoverage['sql-generator/index.js'][77]++;
  if (! jk) {
    _$jscoverage['sql-generator/index.js'][78]++;
    jk = "AND";
  }
  _$jscoverage['sql-generator/index.js'][81]++;
  if (key && key.toLowerCase() == "-or") {
    _$jscoverage['sql-generator/index.js'][82]++;
    var vs = new Array();
    _$jscoverage['sql-generator/index.js'][83]++;
    if (where instanceof Array) {
      _$jscoverage['sql-generator/index.js'][84]++;
      where.forEach((function (w) {
  _$jscoverage['sql-generator/index.js'][85]++;
  vs.push(self._recurse_where(values, w, key, bop, "OR"));
}));
    }
    else {
      _$jscoverage['sql-generator/index.js'][87]++;
      if (typeof where == "object") {
        _$jscoverage['sql-generator/index.js'][88]++;
        Object.keys(where).forEach((function (w) {
  _$jscoverage['sql-generator/index.js'][89]++;
  var tmph = {};
  _$jscoverage['sql-generator/index.js'][90]++;
  tmph[w] = where[w];
  _$jscoverage['sql-generator/index.js'][91]++;
  vs.push(self._recurse_where(values, tmph, null, bop, "OR"));
}));
      }
    }
    _$jscoverage['sql-generator/index.js'][93]++;
    return "(" + vs.join(" OR ") + ")";
  }
  else {
    _$jscoverage['sql-generator/index.js'][95]++;
    if (where instanceof Array) {
      _$jscoverage['sql-generator/index.js'][96]++;
      var vs = new Array();
      _$jscoverage['sql-generator/index.js'][97]++;
      for (var i = 0; i < where.length; i++) {
        _$jscoverage['sql-generator/index.js'][98]++;
        vs.push(self._recurse_where(values, where[i], key, bop, jk));
}
      _$jscoverage['sql-generator/index.js'][99]++;
      return "( " + vs.join(" OR ") + " )";
    }
    else {
      _$jscoverage['sql-generator/index.js'][101]++;
      if ((where === null || where === undefined) && key) {
        _$jscoverage['sql-generator/index.js'][102]++;
        if (bop == "=") {
          _$jscoverage['sql-generator/index.js'][103]++;
          return key + " IS NULL";
        }
        else {
          _$jscoverage['sql-generator/index.js'][105]++;
          return key + " " + bop + " NULL";
        }
      }
      else {
        _$jscoverage['sql-generator/index.js'][107]++;
        if (typeof where == "object") {
          _$jscoverage['sql-generator/index.js'][108]++;
          var ws = new Array();
          _$jscoverage['sql-generator/index.js'][109]++;
          for (var op in where) {
            _$jscoverage['sql-generator/index.js'][111]++;
            if (op.toLowerCase() == "-and") {
              _$jscoverage['sql-generator/index.js'][112]++;
              var vs = new Array();
              _$jscoverage['sql-generator/index.js'][113]++;
              where[op].forEach((function (w) {
  _$jscoverage['sql-generator/index.js'][114]++;
  vs.push(self._recurse_where(values, w, key, bop, jk));
}));
              _$jscoverage['sql-generator/index.js'][116]++;
              return "(" + vs.join(" AND ") + ")";
            }
            else {
              _$jscoverage['sql-generator/index.js'][118]++;
              if (["=", "!=", ">", ">=", "<", "<="].indexOf(op.toLowerCase()) != -1) {
                _$jscoverage['sql-generator/index.js'][119]++;
                ws.push(self._recurse_where(values, where[op], key, op, jk));
              }
              else {
                _$jscoverage['sql-generator/index.js'][121]++;
                if (op.toLowerCase() == "in") {
                  _$jscoverage['sql-generator/index.js'][122]++;
                  if (typeof where[op] == "object" && typeof where[op].sql == "object" && where[op].sql.sql && where[op].sql.values) {
                    _$jscoverage['sql-generator/index.js'][125]++;
                    var sql = where[op].sql.sql;
                    _$jscoverage['sql-generator/index.js'][126]++;
                    var tmp_values = new Array();
                    _$jscoverage['sql-generator/index.js'][127]++;
                    for (var i = where[op].sql.values.length - 1; i >= 0; i--) {
                      _$jscoverage['sql-generator/index.js'][128]++;
                      tmp_values.unshift(where[op].sql.values[i]);
                      _$jscoverage['sql-generator/index.js'][129]++;
                      var new_sql = sql.replace("$" + (i + 1), "$" + (values.length + i + 1));
                      _$jscoverage['sql-generator/index.js'][130]++;
                      sql = new_sql;
}
                    _$jscoverage['sql-generator/index.js'][132]++;
                    for (var i = 0; i < tmp_values.length; i++) {
                      _$jscoverage['sql-generator/index.js'][133]++;
                      values.push(tmp_values[i]);
}
                    _$jscoverage['sql-generator/index.js'][134]++;
                    ws.push(key + " IN ( " + sql + " )");
                  }
                  else {
                    _$jscoverage['sql-generator/index.js'][136]++;
                    if (typeof where[op] == "string" && where[op].match("^(SELECT|select)")) {
                      _$jscoverage['sql-generator/index.js'][137]++;
                      ws.push(key + " IN ( " + where[op] + " ) ");
                    }
                    else {
                      _$jscoverage['sql-generator/index.js'][139]++;
                      var vs = new Array();
                      _$jscoverage['sql-generator/index.js'][140]++;
                      for (var i = 0; i < where[op].length; i++) {
                        _$jscoverage['sql-generator/index.js'][141]++;
                        values.push(where[op][i]);
                        _$jscoverage['sql-generator/index.js'][142]++;
                        vs.push("$" + values.length);
}
                      _$jscoverage['sql-generator/index.js'][144]++;
                      ws.push(key + " IN ( " + vs.join(", ") + " )");
                    }
                  }
                }
                else {
                  _$jscoverage['sql-generator/index.js'][147]++;
                  if (op.toLowerCase() == "array") {
                    _$jscoverage['sql-generator/index.js'][148]++;
                    if (typeof where[op] != "object") {
                      _$jscoverage['sql-generator/index.js'][149]++;
                      where[op] = {ANY: where[op]};
                    }
                    _$jscoverage['sql-generator/index.js'][151]++;
                    var ary_fn;
                    _$jscoverage['sql-generator/index.js'][152]++;
                    var ary_op;
                    _$jscoverage['sql-generator/index.js'][153]++;
                    var sec;
                    _$jscoverage['sql-generator/index.js'][154]++;
                    (function () {
  _$jscoverage['sql-generator/index.js'][155]++;
  var flag = false;
  _$jscoverage['sql-generator/index.js'][156]++;
  if (typeof where[op] == "object") {
    _$jscoverage['sql-generator/index.js'][157]++;
    for (var ary_key in where[op]) {
      _$jscoverage['sql-generator/index.js'][158]++;
      if (ary_key.toLowerCase().match(/(any|all)$/)) {
        _$jscoverage['sql-generator/index.js'][159]++;
        ary_fn = RegExp.$1.toUpperCase();
        _$jscoverage['sql-generator/index.js'][160]++;
        if (ary_key.match(/^(!=|>=|<=|>|<|=) /)) {
          _$jscoverage['sql-generator/index.js'][161]++;
          ary_op = RegExp.$1;
        }
        else {
          _$jscoverage['sql-generator/index.js'][163]++;
          ary_op = "=";
        }
        _$jscoverage['sql-generator/index.js'][164]++;
        sec = where[op][ary_key];
        _$jscoverage['sql-generator/index.js'][165]++;
        flag = true;
        _$jscoverage['sql-generator/index.js'][166]++;
        break;
      }
}
  }
  _$jscoverage['sql-generator/index.js'][168]++;
  if (! flag) {
    _$jscoverage['sql-generator/index.js'][169]++;
    ary_fn = "ANY";
    _$jscoverage['sql-generator/index.js'][170]++;
    ary_op = "=";
    _$jscoverage['sql-generator/index.js'][171]++;
    sec = where[op];
  }
})();
                    _$jscoverage['sql-generator/index.js'][174]++;
                    if (typeof sec.sql == "object" && sec.sql.sql && sec.sql.values) {
                      _$jscoverage['sql-generator/index.js'][176]++;
                      var sql = sec.sql.sql;
                      _$jscoverage['sql-generator/index.js'][177]++;
                      var tmp_values = new Array();
                      _$jscoverage['sql-generator/index.js'][178]++;
                      for (var i = sec.sql.values.length - 1; i >= 0; i--) {
                        _$jscoverage['sql-generator/index.js'][179]++;
                        tmp_values.unshift(sec.sql.values[i]);
                        _$jscoverage['sql-generator/index.js'][180]++;
                        var new_sql = sql.replace("$" + (i + 1), "$" + (values.length + i + 1));
                        _$jscoverage['sql-generator/index.js'][181]++;
                        sql = new_sql;
}
                      _$jscoverage['sql-generator/index.js'][183]++;
                      for (var i = 0; i < tmp_values.length; i++) {
                        _$jscoverage['sql-generator/index.js'][184]++;
                        values.push(tmp_values[i]);
}
                      _$jscoverage['sql-generator/index.js'][185]++;
                      ws.push("(" + sql + ") " + ary_op + " " + ary_fn + "(" + key + ")");
                    }
                    else {
                      _$jscoverage['sql-generator/index.js'][187]++;
                      if (typeof sec == "string" && sec.match("^(SELECT|select)")) {
                        _$jscoverage['sql-generator/index.js'][188]++;
                        ws.push("(" + sec + ") " + ary_op + " " + ary_fn + "(" + key + ")");
                      }
                      else {
                        _$jscoverage['sql-generator/index.js'][189]++;
                        if (sec instanceof Array) {
                          _$jscoverage['sql-generator/index.js'][190]++;
                          var vs = new Array();
                          _$jscoverage['sql-generator/index.js'][191]++;
                          sec.forEach((function (v) {
  _$jscoverage['sql-generator/index.js'][192]++;
  values.push(v);
  _$jscoverage['sql-generator/index.js'][193]++;
  vs.push("$" + values.length + " " + ary_op + " " + ary_fn + "(" + key + ")");
}));
                          _$jscoverage['sql-generator/index.js'][195]++;
                          ws.push("(" + vs.join(" OR ") + ")");
                        }
                        else {
                          _$jscoverage['sql-generator/index.js'][198]++;
                          values.push(sec);
                          _$jscoverage['sql-generator/index.js'][199]++;
                          ws.push("$" + values.length + " " + ary_op + " " + ary_fn + "(" + key + ")");
                        }
                      }
                    }
                  }
                  else {
                    _$jscoverage['sql-generator/index.js'][202]++;
                    if (key) {
                      _$jscoverage['sql-generator/index.js'][203]++;
                      if (where[op] instanceof Array) {
                        _$jscoverage['sql-generator/index.js'][204]++;
                        ws.push(self._recurse_where(values, where[op], key, op, jk));
                      }
                      else {
                        _$jscoverage['sql-generator/index.js'][206]++;
                        ws.push(self._recurse_where(values, where[op], key, op, jk));
                      }
                    }
                    else {
                      _$jscoverage['sql-generator/index.js'][209]++;
                      ws.push(self._recurse_where(values, where[op], op, bop, jk));
                    }
                  }
                }
              }
            }
}
          _$jscoverage['sql-generator/index.js'][212]++;
          return ws.join(" " + jk + " ");
        }
        else {
          _$jscoverage['sql-generator/index.js'][215]++;
          values.push(where);
          _$jscoverage['sql-generator/index.js'][216]++;
          return key + " " + bop + " $" + values.length;
        }
      }
    }
  }
});
  _$jscoverage['sql-generator/index.js'][219]++;
  self._gen_select_column = (function (columns) {
  _$jscoverage['sql-generator/index.js'][220]++;
  var column = "";
  _$jscoverage['sql-generator/index.js'][221]++;
  if (columns instanceof Array) {
    _$jscoverage['sql-generator/index.js'][222]++;
    var cols = new Array();
    _$jscoverage['sql-generator/index.js'][223]++;
    for (var i = 0; i < columns.length; i++) {
      _$jscoverage['sql-generator/index.js'][224]++;
      if (typeof columns[i] == "object") {
        _$jscoverage['sql-generator/index.js'][225]++;
        for (var key in columns[i]) {
          _$jscoverage['sql-generator/index.js'][226]++;
          cols.push(key + " AS " + columns[i][key]);
}
      }
      else {
        _$jscoverage['sql-generator/index.js'][229]++;
        cols.push(columns[i]);
      }
}
    _$jscoverage['sql-generator/index.js'][231]++;
    column = cols.join(", ");
  }
  else {
    _$jscoverage['sql-generator/index.js'][233]++;
    if (typeof columns == "object") {
      _$jscoverage['sql-generator/index.js'][234]++;
      var cols = new Array();
      _$jscoverage['sql-generator/index.js'][235]++;
      for (var key in columns) {
        _$jscoverage['sql-generator/index.js'][236]++;
        cols.push(key + " AS " + columns[key]);
}
      _$jscoverage['sql-generator/index.js'][237]++;
      column = cols.join(", ");
    }
    else {
      _$jscoverage['sql-generator/index.js'][240]++;
      column = columns;
    }
  }
  _$jscoverage['sql-generator/index.js'][242]++;
  if (typeof column == "undefined" || column.length < 1) {
    _$jscoverage['sql-generator/index.js'][243]++;
    column = "*";
  }
  _$jscoverage['sql-generator/index.js'][244]++;
  return column;
});
  _$jscoverage['sql-generator/index.js'][246]++;
  self._gen_table = (function (table) {
  _$jscoverage['sql-generator/index.js'][247]++;
  var t = new Array();
  _$jscoverage['sql-generator/index.js'][248]++;
  if (table instanceof Array) {
    _$jscoverage['sql-generator/index.js'][249]++;
    for (var i = 0; i < table.length; i++) {
      _$jscoverage['sql-generator/index.js'][250]++;
      if (typeof table[i] == "object") {
        _$jscoverage['sql-generator/index.js'][251]++;
        for (var k in table[i]) {
          _$jscoverage['sql-generator/index.js'][252]++;
          t.push(k + " AS " + table[i][k]);
}
      }
      else {
        _$jscoverage['sql-generator/index.js'][254]++;
        t.push(table[i]);
      }
}
    _$jscoverage['sql-generator/index.js'][256]++;
    return t.join(", ");
  }
  _$jscoverage['sql-generator/index.js'][258]++;
  return table;
});
  _$jscoverage['sql-generator/index.js'][260]++;
  self.insert = (function (table, data, callback) {
  _$jscoverage['sql-generator/index.js'][262]++;
  var keys = new Array();
  _$jscoverage['sql-generator/index.js'][263]++;
  var values = new Array();
  _$jscoverage['sql-generator/index.js'][264]++;
  var pvalues = new Array();
  _$jscoverage['sql-generator/index.js'][265]++;
  for (var key in data) {
    _$jscoverage['sql-generator/index.js'][266]++;
    keys.push(key);
    _$jscoverage['sql-generator/index.js'][267]++;
    if (typeof data[key] == "object" && data[key] instanceof Array) {
      _$jscoverage['sql-generator/index.js'][268]++;
      var is_num = true;
      _$jscoverage['sql-generator/index.js'][269]++;
      for (var i = 0; i < data[key].length; i++) {
        _$jscoverage['sql-generator/index.js'][270]++;
        if (typeof data[key][i] != "number") {
          _$jscoverage['sql-generator/index.js'][271]++;
          is_num = false;
          _$jscoverage['sql-generator/index.js'][272]++;
          break;
        }
}
      _$jscoverage['sql-generator/index.js'][275]++;
      if (is_num) {
        _$jscoverage['sql-generator/index.js'][276]++;
        values.push("{" + data[key].join(",") + "}");
        _$jscoverage['sql-generator/index.js'][277]++;
        pvalues.push("$" + values.length);
      }
      else {
        _$jscoverage['sql-generator/index.js'][280]++;
        var ary_vs = new Array();
        _$jscoverage['sql-generator/index.js'][281]++;
        data[key].forEach((function (v) {
  _$jscoverage['sql-generator/index.js'][282]++;
  values.push(v);
  _$jscoverage['sql-generator/index.js'][283]++;
  ary_vs.push("$" + values.length);
}));
        _$jscoverage['sql-generator/index.js'][285]++;
        pvalues.push("ARRAY[" + ary_vs.join(", ") + "]");
      }
    }
    else {
      _$jscoverage['sql-generator/index.js'][289]++;
      values.push(data[key]);
      _$jscoverage['sql-generator/index.js'][290]++;
      pvalues.push("$" + values.length);
    }
}
  _$jscoverage['sql-generator/index.js'][293]++;
  var sql = "INSERT INTO " + table + " ( " + keys.join(", ") + " ) VALUES ( " + pvalues.join(", ") + " )";
  _$jscoverage['sql-generator/index.js'][294]++;
  if (typeof callback == "function") {
    _$jscoverage['sql-generator/index.js'][295]++;
    return callback(sql, values);
  }
  _$jscoverage['sql-generator/index.js'][296]++;
  return ({sql: sql, values: values});
});
  _$jscoverage['sql-generator/index.js'][298]++;
  self.update = (function (table, wheres, data, callback) {
  _$jscoverage['sql-generator/index.js'][300]++;
  var kvs = new Array();
  _$jscoverage['sql-generator/index.js'][301]++;
  var values = new Array();
  _$jscoverage['sql-generator/index.js'][302]++;
  for (var key in data) {
    _$jscoverage['sql-generator/index.js'][303]++;
    if (typeof data[key] == "object" && data[key] instanceof Array) {
      _$jscoverage['sql-generator/index.js'][304]++;
      var is_num = true;
      _$jscoverage['sql-generator/index.js'][305]++;
      for (var i = 0; i < data[key].length; i++) {
        _$jscoverage['sql-generator/index.js'][306]++;
        if (typeof data[key][i] != "number") {
          _$jscoverage['sql-generator/index.js'][307]++;
          is_num = false;
          _$jscoverage['sql-generator/index.js'][308]++;
          break;
        }
}
      _$jscoverage['sql-generator/index.js'][311]++;
      if (is_num) {
        _$jscoverage['sql-generator/index.js'][312]++;
        values.push("{" + data[key].join(",") + "}");
        _$jscoverage['sql-generator/index.js'][313]++;
        kvs.push(key + " = $" + values.length);
      }
      else {
        _$jscoverage['sql-generator/index.js'][316]++;
        var ary_vs = new Array();
        _$jscoverage['sql-generator/index.js'][317]++;
        data[key].forEach((function (v) {
  _$jscoverage['sql-generator/index.js'][318]++;
  values.push(v);
  _$jscoverage['sql-generator/index.js'][319]++;
  ary_vs.push("$" + values.length);
}));
        _$jscoverage['sql-generator/index.js'][321]++;
        kvs.push(key + " = ARRAY[" + ary_vs.join(", ") + "]");
      }
    }
    else {
      _$jscoverage['sql-generator/index.js'][325]++;
      values.push(data[key]);
      _$jscoverage['sql-generator/index.js'][326]++;
      kvs.push(key + " = $" + values.length);
    }
}
  _$jscoverage['sql-generator/index.js'][329]++;
  var where = self._gen_where(wheres, values);
  _$jscoverage['sql-generator/index.js'][330]++;
  var sql = "UPDATE " + table + " SET " + kvs.join(", ");
  _$jscoverage['sql-generator/index.js'][331]++;
  if (where && where.length > 0) {
    _$jscoverage['sql-generator/index.js'][332]++;
    sql += " WHERE " + where;
  }
  _$jscoverage['sql-generator/index.js'][333]++;
  if (typeof callback == "function") {
    _$jscoverage['sql-generator/index.js'][334]++;
    return callback(sql, values);
  }
  _$jscoverage['sql-generator/index.js'][335]++;
  return ({sql: sql, values: values});
});
  _$jscoverage['sql-generator/index.js'][337]++;
  self["delete"] = (function (table, wheres, callback) {
  _$jscoverage['sql-generator/index.js'][339]++;
  var values = new Array();
  _$jscoverage['sql-generator/index.js'][340]++;
  var where = self._gen_where(wheres, values);
  _$jscoverage['sql-generator/index.js'][341]++;
  var sql = "DELETE FROM " + table;
  _$jscoverage['sql-generator/index.js'][342]++;
  if (where && where.length > 0) {
    _$jscoverage['sql-generator/index.js'][343]++;
    sql += " WHERE " + where;
  }
  _$jscoverage['sql-generator/index.js'][344]++;
  if (typeof callback == "function") {
    _$jscoverage['sql-generator/index.js'][345]++;
    return callback(sql, values);
  }
  _$jscoverage['sql-generator/index.js'][346]++;
  return ({sql: sql, values: values});
});
});
_$jscoverage['sql-generator/index.js'][349]++;
module.exports = SqlGenerator;
_$jscoverage['sql-generator/index.js'].source = ["//var sys = require('sys');","var SqlGenerator = function( type ) {","    var self = this;","    if( !type )","        type = 'Pg';","    self.driver_type = type;","    //console.log( sys.inspect( [ self ] ) );","    //self.driver = require('./driver/' + self.driver_type );","    ","    self.select = function( tbls, columns, wheres, opt, callback ) {","//        console.log( sys.inspect( {table: table, columns: columns, where:wheres, opt:opt} ) );","        var table  = self._gen_table( tbls );","        var column = self._gen_select_column( columns );","        var values = new Array;","        var where  = self._gen_where( wheres, values );","        var option = self._gen_select_option( opt );","//        console.log( sys.inspect( { table: table, column: column, where: where, option: option } ) );","        var sql = 'SELECT ' + column + ' FROM ' + table;","        if( where &amp;&amp; where.length &gt; 0 )","            sql += ' WHERE ' + where;","        if( option &amp;&amp; option.length &gt; 0 )","            sql += ' ' + option;","        if( typeof callback == 'function' )","            return callback( sql, values );","        return { sql: sql, values: values };","    };","    self._gen_select_option = function( opt ) {","        if( !( typeof opt == 'object' &amp;&amp; !(opt instanceof Array) ) )","            return '';","        var sqls = new Array;","        // these code is postgresql only","        if( opt['group_by'] ) {","            if( typeof opt['group_by'] == 'object' &amp;&amp; opt['group_by'] instanceof Array )","                sqls.push( 'GROUP BY ' + opt['group_by'].join(', ') );","            else","                sqls.push( 'GROUP BY ' + opt['group_by'] );","        }","        if( opt['order'] ) {","            var order = '';","            if( opt['order'] instanceof Array )","                order = opt['order'].join(', ');","            else","                order = opt['order'];","            sqls.push( 'ORDER BY ' + order );","        }","        if( opt['limit'] &amp;&amp; typeof opt['limit'] == 'number' )","            sqls.push( 'LIMIT ' + opt['limit'] );","        if( opt['offset'] &amp;&amp; typeof opt['offset'] == 'number' )","            sqls.push( 'OFFSET ' + opt['offset'] );","        return sqls.join(' ');","    };","    self._gen_where = function( tmp_where, values ) {","        var w;","        if( tmp_where ) {","            var where = JSON.parse( JSON.stringify( tmp_where ) );","            if( where instanceof Array ) {","                var ws = new Array;","                for( var i = 0; i &lt; where.length; i ++ ) {","                    ws.push( self._recurse_where( values, where[i] ) );","                }","                w = ws.join(' OR ');","            }","            else if( typeof where == 'object' ) {","                var ws = new Array;","                for( var key in where )","                    ws.push( self._recurse_where( values, where[key], key ) );","                w = ws.join(' AND ');","            }","            else","                w = where;","        }","        return w;","    };","    self._recurse_where = function( values, where, key, bop, jk ) {","        if( !bop )","            bop = '=';","        if( !jk )","            jk = 'AND';","        //var util = require('util');","        //console.log( util.inspect( { values: values, where: where, key: key, bop: bop, jk: jk }, false, 10 ) );","        if( key &amp;&amp; key.toLowerCase() == '-or' ) {","            var vs = new Array();","            if( where instanceof Array )","                where.forEach( function( w ) {","                    vs.push( self._recurse_where( values, w, key, bop, 'OR' ) );","                } );","            else if( typeof where == 'object' )","                Object.keys( where ).forEach( function( w ) {","                    var tmph = {};","                    tmph[ w ] = where[ w ];","                    vs.push( self._recurse_where( values, tmph, null, bop, 'OR' ) );","                } );","            return '(' + vs.join(' OR ') + ')';","        }","        else if( where instanceof Array ) {","            var vs = new Array;","            for( var i = 0; i &lt; where.length; i ++ )","                vs.push( self._recurse_where( values, where[i], key, bop, jk ) );","            return '( ' + vs.join(' OR ') + ' )';","        }","        else if( ( where === null || where === undefined ) &amp;&amp; key ) {","            if(  bop == '=' )","                return key + ' IS NULL';","            else","                return key + ' ' + bop + ' NULL';","        }","        else if( typeof where == 'object' ) {","            var ws = new Array;","            for( var op in where ) {","                //console.log( '+++', { ws: ws, op: op, key:key, 'where[op]': where[op] } );","                if( op.toLowerCase() == '-and' ) {","                    var vs = new Array();","                    where[op].forEach( function( w ) {","                        vs.push( self._recurse_where( values, w, key, bop, jk ) );","                    } );","                    return '(' + vs.join(' AND ') + ')';","                }","                else if( ['=','!=','&gt;','&gt;=','&lt;','&lt;='].indexOf( op.toLowerCase() ) != -1 ) {","                    ws.push( self._recurse_where( values, where[op], key, op, jk ) );","                }","                else if( op.toLowerCase() == 'in' ) {","                    if( typeof where[op] == 'object'","                        &amp;&amp; typeof where[op]['sql'] == 'object'","                        &amp;&amp; where[op]['sql']['sql'] &amp;&amp; where[op]['sql']['values'] ) {","                        var sql = where[op]['sql']['sql'];","                        var tmp_values = new Array();","                        for( var i = where[op]['sql']['values'].length - 1; i &gt;= 0; i -- ) {","                            tmp_values.unshift( where[op]['sql']['values'][i] );","                            var new_sql = sql.replace( '\\$' + ( i + 1 ), '$' + ( values.length + i + 1 ) );","                            sql = new_sql;","                        }","                        for( var i = 0; i &lt; tmp_values.length; i ++ )","                            values.push( tmp_values[i] );","                        ws.push( key + ' IN ( ' + sql + ' )' );","                    }","                    else if( typeof where[op] == 'string' &amp;&amp; where[op].match('^(SELECT|select)') )","                        ws.push( key + ' IN ( ' + where[op] + ' ) ' );","                    else {","                        var vs = new Array();","                        for( var i = 0; i &lt; where[op].length; i ++ ) {","                            values.push( where[op][i] );","                            vs.push( '$' + values.length );","                        }","                        ws.push( key + ' IN ( ' + vs.join(', ') + ' )');","                    }","                }","                else if( op.toLowerCase() == 'array' ) {","                    if( typeof where[op] != 'object' ) {","                        where[op] = { ANY: where[op] };","                    }","                    var ary_fn;","                    var ary_op;","                    var sec;","                    ( function() {","                        var flag = false;","                        if( typeof where[op] == 'object' )","                            for( var ary_key in where[op] )","                                if( ary_key.toLowerCase().match( /(any|all)$/ ) ) {","                                    ary_fn = RegExp.$1.toUpperCase();","                                    if( ary_key.match( /^(!=|&gt;=|&lt;=|&gt;|&lt;|=) / ) )","                                        ary_op = RegExp.$1;","                                    else","                                        ary_op = '=';","                                    sec = where[op][ary_key];","                                    flag = true;","                                    break;","                                }","                        if( !flag ) {","                            ary_fn = 'ANY';","                            ary_op = '=';","                            sec = where[op];","                        }","                    } )();","                    if( typeof sec['sql'] == 'object'","                        &amp;&amp; sec['sql']['sql'] &amp;&amp; sec['sql']['values'] ) {","                        var sql = sec['sql']['sql'];","                        var tmp_values = new Array();","                        for( var i = sec['sql']['values'].length - 1; i &gt;= 0; i -- ) {","                            tmp_values.unshift( sec['sql']['values'][i] );","                            var new_sql = sql.replace( '\\$' + ( i + 1 ), '$' + ( values.length + i + 1 ) );","                            sql = new_sql;","                        }","                        for( var i = 0; i &lt; tmp_values.length; i ++ )","                            values.push( tmp_values[i] );","                        ws.push( '(' + sql + ') ' + ary_op + ' ' + ary_fn + '(' + key + ')' );","                    }","                    else if( typeof sec == 'string' &amp;&amp; sec.match('^(SELECT|select)') )","                        ws.push( '(' + sec + ') ' + ary_op + ' ' + ary_fn + '(' + key + ')' );","                    else if( sec instanceof Array ) {","                        var vs = new Array();","                        sec.forEach( function( v ) {","                            values.push( v );","                            vs.push( '$' + values.length + ' ' + ary_op + ' ' + ary_fn + '(' + key + ')' );","                        } );","                        ws.push( '(' + vs.join(' OR ') + ')' );","                    }","                    else {","                        values.push( sec );","                        ws.push( '$' + values.length + ' ' + ary_op + ' ' + ary_fn + '(' + key + ')' );","                    }","                }","                else if( key ) {","                    if( where[op] instanceof Array )","                        ws.push( self._recurse_where( values, where[op], key, op, jk ) );","                    else","                        ws.push( self._recurse_where( values, where[op], key, op, jk ) );","                }","                else {","                    ws.push( self._recurse_where( values, where[op], op, bop, jk ) );","                }","            }","            return ws.join(' '+jk+' ');","        }","        else {","            values.push( where );","            return key + ' ' + bop + ' $' + values.length;","        }","    };","    self._gen_select_column = function( columns ) {","        var column = '';","        if( columns instanceof Array ) {","            var cols = new Array;","            for( var i = 0; i &lt; columns.length; i ++ ) {","                if( typeof columns[i] == 'object' ) {","                    for( var key in columns[i] )","                        cols.push( key + ' AS ' + columns[i][key] );","                }","                else","                    cols.push( columns[i] );","            }","            column = cols.join(', ');","        }","        else if( typeof columns == 'object' ) {","            var cols = new Array;","            for( var key in columns )","                cols.push( key + ' AS ' + columns[key] );","            column = cols.join(', ');","        }","        else {","            column = columns;","        }","        if( typeof column == 'undefined' || column.length &lt; 1 )","            column = '*';","        return column;","    };","    self._gen_table = function( table ) {","        var t = new Array;","        if( table instanceof Array ) {","            for( var i = 0; i &lt; table.length; i ++ ) {","                if( typeof table[i] == 'object' )","                    for( var k in table[i] )","                        t.push( k + ' AS ' + table[i][k] );","                else","                    t.push( table[i] );","            }","            return t.join(', ');","        }","        return table;","    };","    self.insert = function( table, data, callback ) {","//        console.log( sys.inspect( {table: table, data: data } ) );","        var keys = new Array;","        var values = new Array;","        var pvalues = new Array;","        for( var key in data ) {","            keys.push( key );","            if( typeof data[key] == 'object' &amp;&amp; data[key] instanceof Array ) {","                var is_num = true;","                for( var i = 0; i &lt; data[key].length; i ++ ) {","                    if( typeof data[key][i] != 'number' ) {","                        is_num = false;","                        break;","                    }","                }","                if( is_num ) {","                    values.push( \"{\" + data[key].join(',') + \"}\" );","                    pvalues.push( '$' + values.length );","                }","                else {","                    var ary_vs = new Array();","                    data[key].forEach( function( v ) {","                        values.push( v );","                        ary_vs.push( '$' + values.length );","                    } );","                    pvalues.push( 'ARRAY[' + ary_vs.join(', ') + ']' );","                }","            }","            else {","                values.push( data[key] );","                pvalues.push( '$' + values.length );","            }","        }","        var sql = 'INSERT INTO ' + table + ' ( ' + keys.join(', ') + ' ) VALUES ( ' + pvalues.join(', ') + ' )';","        if( typeof callback == 'function' )","            return callback( sql, values );","        return { sql: sql, values: values };","    };","    self.update = function( table, wheres, data, callback ) {","        //console.log( sys.inspect( { table: table, where: wheres, data: data } ) );","        var kvs = new Array;","        var values = new Array;","        for( var key in data ) {","            if( typeof data[key] == 'object' &amp;&amp; data[key] instanceof Array ) {","                var is_num = true;","                for( var i = 0; i &lt; data[key].length; i ++ ) {","                    if( typeof data[key][i] != 'number' ) {","                        is_num = false;","                        break;","                    }","                }","                if( is_num ) {","                    values.push( \"{\" + data[key].join(',') + \"}\" );","                    kvs.push( key + ' = $' + values.length );","                }","                else {","                    var ary_vs = new Array();","                    data[key].forEach( function( v ) {","                        values.push( v );","                        ary_vs.push( '$' + values.length );","                    } );","                    kvs.push( key + ' = ARRAY[' + ary_vs.join(', ') + ']' );","                }","            }","            else {","                values.push( data[key] );","                kvs.push( key + ' = $' + values.length );","            }","        }","        var where = self._gen_where( wheres, values );","        var sql = 'UPDATE ' + table + ' SET ' + kvs.join(', ');","        if( where &amp;&amp; where.length &gt; 0 )","            sql += ' WHERE ' + where;","        if( typeof callback == 'function' )","            return callback( sql, values );","        return { sql: sql, values: values };","    };","    self.delete = function( table, wheres, callback ) {","        //console.log( sys.inspect( { table: table, where: wheres } ) );","        var values = new Array;","        var where = self._gen_where( wheres, values );","        var sql = 'DELETE FROM ' + table;","        if( where &amp;&amp; where.length &gt; 0 )","            sql += ' WHERE ' + where;","        if( typeof callback == 'function' )","            return callback( sql, values );","        return { sql: sql, values: values };","    };","}","module.exports = SqlGenerator;"];
